<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/batch
            http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">


    <batch:job id="csvJob">
        <batch:step id="csvStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="csvItemReader" writer="csvItemWriter" processor="csvItemProcessor" commit-interval="1">
                </chunk>
            </tasklet>
        </batch:step>
    </batch:job>

    <!--读取文件-->
    <bean id="csvItemReader"
          class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="classpath:inputFile.csv"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer" ref="lineTokenizer"/>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="student"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value=","/>
        <property name="names">
            <list>
                <value>ID</value>
                <value>name</value>
                <value>age</value>
                <value>score</value>
            </list>
        </property>
    </bean>

    <!-- 写CSV文件 -->
    <bean id="csvItemWriter"
               class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="file:src/outputFile.csv"/>
        <property name="lineAggregator">
            <bean
                    class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=","></property>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="name,age,score"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--   <job id="helloWorldJob">
           <step id="step_hello" next="step_world">
               <tasklet ref="hello" transaction-manager="transactionManager"></tasklet>
           </step>
           <step id="step_world">
               <tasklet ref="world" transaction-manager="transactionManager"></tasklet>
           </step>
       </job>

       <bean:bean id="hello" class="com.wanggc.springbatch.sample.helloworld.writeTasklet">
           <bean:property name="message" value="Hello "></bean:property>
       </bean:bean>

       <bean:bean id="world" class="com.wanggc.springbatch.sample.helloworld.writeTasklet">
           <bean:property name="message" value=" World!"></bean:property>
       </bean:bean>-->
</beans>